{
  "address": "0xa6F04242e0EaB7120b504e28AF3442C76F8821ed",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BNB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "campaigns",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redeemableAt",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "redeemedAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_redeemableAt",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "createCampaign",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "campaignId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardId",
          "type": "uint256"
        }
      ],
      "name": "hasClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exist_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proof",
          "type": "bytes32[]"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_redeemableAt",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_paused",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "updateCampain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1ebd96b48645e58f510abe935f9994ccdb33e1d9a5e5c0ad843518584623e8a2",
  "receipt": {
    "to": null,
    "from": "0xAd14706CE4a7FC73eF640AaB3002c7B97f42b604",
    "contractAddress": "0xa6F04242e0EaB7120b504e28AF3442C76F8821ed",
    "transactionIndex": 82,
    "gasUsed": "1384038",
    "logsBloom": "0x
    "blockHash": "0x1b6ec6bd6a09723953650a89e9de668db51471bf8a79bd378ad52802cf0a8599",
    "transactionHash": "0x1ebd96b48645e58f510abe935f9994ccdb33e1d9a5e5c0ad843518584623e8a2",
    "logs": [
      {
        "transactionIndex": 82,
        "blockNumber": 20139520,
        "transactionHash": "0x1ebd96b48645e58f510abe935f9994ccdb33e1d9a5e5c0ad843518584623e8a2",
        "address": "0xa6F04242e0EaB7120b504e28AF3442C76F8821ed",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ad14706ce4a7fc73ef640aab3002c7b97f42b604"
        ],
        "data": "0x",
        "logIndex": 197,
        "blockHash": "0x1b6ec6bd6a09723953650a89e9de668db51471bf8a79bd378ad52802cf0a8599"
      }
    ],
    "blockNumber": 20139520,
    "cumulativeGasUsed": "7793013",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bbd6b840d6e09f1711e38a2fb61ba2e3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaigns\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemableAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"redeemedAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_redeemableAt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"createCampaign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardId\",\"type\":\"uint256\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exist_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_redeemableAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"updateCampain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rewards(uint256,address,uint256)\":{\"notice\":\"Mapping of addresses who have claimed tokens from campaign\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Erc20Airdrop.sol\":\"Erc20Airdrop\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/cryptography/MerkleProof.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev These functions deal with verification of Merkle Trees proofs.\\n *\\n * The proofs can be generated using the JavaScript library\\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\\n *\\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\\n */\\nlibrary MerkleProof {\\n    /**\\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n     * defined by `root`. For this, a `proof` must be provided, containing\\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\\n     */\\n    function verify(\\n        bytes32[] memory proof,\\n        bytes32 root,\\n        bytes32 leaf\\n    ) internal pure returns (bool) {\\n        return processProof(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the rebuilt hash obtained by traversing a Merklee tree up\\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n     * hash matches the root of the tree. When processing the proof, the pairs\\n     * of leafs & pre-images are assumed to be sorted.\\n     *\\n     * _Available since v4.4._\\n     */\\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            bytes32 proofElement = proof[i];\\n            if (computedHash <= proofElement) {\\n                // Hash(current computed hash + current element of the proof)\\n                computedHash = _efficientHash(computedHash, proofElement);\\n            } else {\\n                // Hash(current element of the proof + current computed hash)\\n                computedHash = _efficientHash(proofElement, computedHash);\\n            }\\n        }\\n        return computedHash;\\n    }\\n\\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n        assembly {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            value := keccak256(0x00, 0x40)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xea64fbaccbf9d8c235cf6838240ddcebb97f9fc383660289e9dff32e4fb85f7a\",\"license\":\"MIT\"},\"contracts/Erc20Airdrop.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\nimport { MerkleProof } from \\\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\\\";\\n\\ncontract Erc20Airdrop is Ownable, Pausable {\\n    using SafeERC20 for IERC20;\\n\\n    /* ======== STATE VARIABLES ======== */\\n    using Counters for Counters.Counter;\\n    Counters.Counter private _campaignIdCounter;\\n\\n    struct Campaign {\\n        IERC20 token;\\n        uint256 redeemableAt;\\n        bool paused;\\n        bytes32 merkleRoot;\\n        uint256 redeemedAmount;\\n        string uri;\\n    }\\n\\n    mapping(uint256 => Campaign) public campaigns;\\n\\n    /// @notice Mapping of addresses who have claimed tokens from campaign\\n    mapping(uint256 => mapping(address => uint256[])) public rewards;\\n\\n    address public constant BNB = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    modifier hasCampaign(uint256 _id) {\\n        require(_id < _campaignIdCounter.current(), \\\"Campaign does not exist\\\");\\n        _;\\n    }\\n\\n    modifier whenCampaignUnpaused(uint256 _id) {\\n        require(!campaigns[_id].paused, \\\"Campaign is not active\\\");\\n        _;\\n    }\\n\\n    function hasClaimed(uint256 _campaignId, address _to, uint256 _rewardId) public view returns (bool exist_) {\\n        uint256[] memory userRewards = rewards[_campaignId][_to];\\n\\n        for(uint i = 0; i < userRewards.length; i++) {\\n            if(userRewards[i] == _rewardId) exist_ = true;\\n        }\\n\\n        return exist_;\\n    }\\n\\n    function verify(uint256 _campaignId, address _to) public view returns(bool) {\\n        if(rewards[_campaignId][_to].length > 0) return true;\\n        return false;\\n    }\\n\\n    function createCampaign(\\n        IERC20 _token,\\n        uint256 _redeemableAt,\\n        bytes32 _merkleRoot,\\n        string memory _uri\\n    ) external onlyOwner returns (uint256 campaignId_) {\\n        campaignId_ = _campaignIdCounter.current();\\n\\n        _campaignIdCounter.increment();\\n        Campaign storage newCampaign = campaigns[campaignId_];\\n        newCampaign.token = _token;\\n        newCampaign.redeemableAt = _redeemableAt;\\n        newCampaign.paused = false;\\n        newCampaign.merkleRoot = _merkleRoot;\\n        newCampaign.uri = _uri;\\n    }\\n\\n    function updateCampain(\\n        uint256 _campaignId, \\n        IERC20 _token, \\n        uint256 _redeemableAt, \\n        bool _paused, \\n        bytes32 _merkleRoot, \\n        string memory _uri\\n    ) public onlyOwner hasCampaign(_campaignId) {\\n        Campaign storage campaign = campaigns[_campaignId];\\n        campaign.token = _token;\\n        campaign.redeemableAt = _redeemableAt;\\n        campaign.paused = _paused;\\n        campaign.merkleRoot = _merkleRoot;\\n        campaign.uri = _uri;\\n    }\\n\\n    function getCurrentCounter() public view returns (uint256) {\\n        return _campaignIdCounter.current();\\n    }\\n\\n    function withdraw(IERC20 _quoteToken, uint256 _amount) external onlyOwner {\\n        require(_amount > 0, \\\"Invalid withdraw amount\\\");\\n        if (address(_quoteToken) != BNB) {\\n            _quoteToken.safeTransfer(msg.sender, _amount);\\n        } else {\\n            payable(msg.sender).transfer(_amount);\\n        }\\n    }\\n\\n    function redeem(\\n        uint256 _campaignId,\\n        address _to,\\n        uint256 _amount,\\n        uint256 _rewardId,\\n        bytes32[] calldata _proof\\n    ) external whenNotPaused whenCampaignUnpaused(_campaignId) {\\n        Campaign storage campaign = campaigns[_campaignId];\\n        require(campaign.redeemableAt < block.timestamp, \\\"campaign is not started yet\\\");\\n\\n        require(!hasClaimed(_campaignId, _to, _rewardId), \\\"already claimed\\\");\\n\\n        // Verify merkle proof, or revert if not in tree\\n        bytes32 leaf = keccak256(abi.encodePacked(_to, _rewardId, _amount));\\n        bool isValidLeaf = MerkleProof.verify(_proof, campaign.merkleRoot, leaf);\\n        require(isValidLeaf, \\\"leaf not in merkle tree\\\");\\n        campaign.redeemedAmount += _amount;\\n        // Set address to claimed\\n        rewards[_campaignId][_to].push(_rewardId);\\n\\n        if (address(campaign.token) != BNB) {\\n            campaign.token.safeTransfer(_to, _amount);\\n        } else {\\n            payable(_to).transfer(_amount);\\n        }\\n    }\\n\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x83fae42a95cbb32714f7dbb4afd6c1f73b1e279cb10f683fa86a879dfa3495c7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361002c565b6000805460ff60a01b1916905561007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6117a38061008b6000396000f3fe6080604052600436106100f75760003560e01c80638456cb591161008a578063d7f2d0e711610059578063d7f2d0e7146102af578063ebfa62b9146102cf578063f2fde38b146102ef578063f3fef3a31461030f57600080fd5b80638456cb591461023c5780638da5cb5b14610251578063b2e65bc51461026f578063cb054d3e1461028f57600080fd5b806358f7f6d2116100c657806358f7f6d2146101b35780635c975abb146101f3578063715018a61461021257806373448c461461022757600080fd5b8063141961bc146101035780632f5dc3db1461013e5780633f4ba83a1461016e578063409ef8091461018557600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e36600461146d565b61032f565b6040516101359695949392919061164e565b60405180910390f35b34801561014a57600080fd5b5061015e6101593660046114b4565b6103fe565b6040519015158152602001610135565b34801561017a57600080fd5b506101836104c5565b005b34801561019157600080fd5b506101a56101a036600461140c565b61052e565b604051908152602001610135565b3480156101bf57600080fd5b506101db73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b039091168152602001610135565b3480156101ff57600080fd5b50600054600160a01b900460ff1661015e565b34801561021e57600080fd5b50610183610603565b34801561023357600080fd5b506101a5610667565b34801561024857600080fd5b50610183610677565b34801561025d57600080fd5b506000546001600160a01b03166101db565b34801561027b57600080fd5b506101a561028a3660046114b4565b6106d9565b34801561029b57600080fd5b506101836102aa36600461158a565b610717565b3480156102bb57600080fd5b506101836102ca3660046114eb565b61083d565b3480156102db57600080fd5b5061015e6102ea366004611485565b610b4e565b3480156102fb57600080fd5b5061018361030a3660046113a9565b610b88565b34801561031b57600080fd5b5061018361032a3660046113e1565b610c6a565b60026020819052600091825260409091208054600182015492820154600383015460048401546005850180546001600160a01b03909516969560ff909416949293919261037b906116f1565b80601f01602080910402602001604051908101604052809291908181526020018280546103a7906116f1565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b5050505050905086565b60008381526003602090815260408083206001600160a01b038616845282528083208054825181850281018501909352808352849383018282801561046257602002820191906000526020600020905b81548152602001906001019080831161044e575b5050505050905060005b81518110156104bb578382828151811061049657634e487b7160e01b600052603260045260246000fd5b602002602001015114156104a957600192505b806104b38161172c565b91505061046c565b50505b9392505050565b6000546001600160a01b031633146105245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61052c610d82565b565b600080546001600160a01b031633146105895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b50600180548082019091556000818152600260208181526040909220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03891617815560018101879055908101805460ff1916905560038101859055835190916105f9916005840191860190611289565b5050949350505050565b6000546001600160a01b0316331461065d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b61052c6000610e28565b600061067260015490565b905090565b6000546001600160a01b031633146106d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b61052c610e85565b6003602052826000526040600020602052816000526040600020818154811061070157600080fd5b9060005260206000200160009250925050505481565b6000546001600160a01b031633146107715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b8561077b60015490565b81106107c95760405162461bcd60e51b815260206004820152601760248201527f43616d706169676e20646f6573206e6f74206578697374000000000000000000604482015260640161051b565b6000878152600260208181526040909220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038a1617815560018101889055908101805460ff19168715151790556003810185905583519091610832916005840191860190611289565b505050505050505050565b600054600160a01b900460ff161561088a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161051b565b60008681526002602081905260409091200154869060ff16156108ef5760405162461bcd60e51b815260206004820152601660248201527f43616d706169676e206973206e6f742061637469766500000000000000000000604482015260640161051b565b6000878152600260205260409020600181015442116109505760405162461bcd60e51b815260206004820152601b60248201527f63616d706169676e206973206e6f742073746172746564207965740000000000604482015260640161051b565b61095b8888876103fe565b156109a85760405162461bcd60e51b815260206004820152600f60248201527f616c726561647920636c61696d65640000000000000000000000000000000000604482015260640161051b565b6040516bffffffffffffffffffffffff19606089901b16602082015260348101869052605481018790526000906074016040516020818303038152906040528051906020012090506000610a33868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505050600385015484610f0d565b905080610a825760405162461bcd60e51b815260206004820152601760248201527f6c656166206e6f7420696e206d65726b6c652074726565000000000000000000604482015260640161051b565b87836004016000828254610a9691906116a9565b909155505060008a81526003602090815260408083206001600160a01b03808e1685529083529083208054600181018255908452919092200188905583541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610b0a578254610b05906001600160a01b03168a8a610f23565b610b42565b6040516001600160a01b038a169089156108fc02908a906000818181858888f19350505050158015610b40573d6000803e3d6000fd5b505b50505050505050505050565b60008281526003602090815260408083206001600160a01b038516845290915281205415610b7e57506001610b82565b5060005b92915050565b6000546001600160a01b03163314610be25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b6001600160a01b038116610c5e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161051b565b610c6781610e28565b50565b6000546001600160a01b03163314610cc45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b60008111610d145760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420776974686472617720616d6f756e74000000000000000000604482015260640161051b565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610d5057610d4c6001600160a01b0383163383610f23565b5050565b604051339082156108fc029083906000818181858888f19350505050158015610d7d573d6000803e3d6000fd5b505050565b600054600160a01b900460ff16610ddb5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161051b565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615610ed25760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161051b565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e0b3390565b600082610f1a8584610f8a565b14949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610d7d90849061100c565b600081815b8451811015611004576000858281518110610fba57634e487b7160e01b600052603260045260246000fd5b60200260200101519050808311610fe05760008381526020829052604090209250610ff1565b600081815260208490526040902092505b5080610ffc8161172c565b915050610f8f565b509392505050565b6000611061826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110f19092919063ffffffff16565b805190915015610d7d578080602001905181019061107f91906113c5565b610d7d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161051b565b60606111008484600085611108565b949350505050565b6060824710156111805760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161051b565b6001600160a01b0385163b6111d75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161051b565b600080866001600160a01b031685876040516111f39190611632565b60006040518083038185875af1925050503d8060008114611230576040519150601f19603f3d011682016040523d82523d6000602084013e611235565b606091505b5091509150611245828286611250565b979650505050505050565b6060831561125f5750816104be565b82511561126f5782518084602001fd5b8160405162461bcd60e51b815260040161051b9190611696565b828054611295906116f1565b90600052602060002090601f0160209004810192826112b757600085556112fd565b82601f106112d057805160ff19168380011785556112fd565b828001600101855582156112fd579182015b828111156112fd5782518255916020019190600101906112e2565b5061130992915061130d565b5090565b5b80821115611309576000815560010161130e565b600082601f830112611332578081fd5b813567ffffffffffffffff8082111561134d5761134d61175d565b604051601f8301601f19908116603f011681019082821181831017156113755761137561175d565b8160405283815286602085880101111561138d578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156113ba578081fd5b81356104be81611773565b6000602082840312156113d6578081fd5b81516104be81611788565b600080604083850312156113f3578081fd5b82356113fe81611773565b946020939093013593505050565b60008060008060808587031215611421578182fd5b843561142c81611773565b93506020850135925060408501359150606085013567ffffffffffffffff811115611455578182fd5b61146187828801611322565b91505092959194509250565b60006020828403121561147e578081fd5b5035919050565b60008060408385031215611497578182fd5b8235915060208301356114a981611773565b809150509250929050565b6000806000606084860312156114c8578283fd5b8335925060208401356114da81611773565b929592945050506040919091013590565b60008060008060008060a08789031215611503578182fd5b86359550602087013561151581611773565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561153f578384fd5b818901915089601f830112611552578384fd5b813581811115611560578485fd5b8a60208260051b8501011115611574578485fd5b6020830194508093505050509295509295509295565b60008060008060008060c087890312156115a2578182fd5b8635955060208701356115b481611773565b94506040870135935060608701356115cb81611788565b92506080870135915060a087013567ffffffffffffffff8111156115ed578182fd5b6115f989828a01611322565b9150509295509295509295565b6000815180845261161e8160208601602086016116c1565b601f01601f19169290920160200192915050565b600082516116448184602087016116c1565b9190910192915050565b6001600160a01b0387168152856020820152841515604082015283606082015282608082015260c060a0820152600061168a60c0830184611606565b98975050505050505050565b6020815260006104be6020830184611606565b600082198211156116bc576116bc611747565b500190565b60005b838110156116dc5781810151838201526020016116c4565b838111156116eb576000848401525b50505050565b600181811c9082168061170557607f821691505b6020821081141561172657634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561174057611740611747565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c6757600080fd5b8015158114610c6757600080fdfea164736f6c6343000804000a",
  "deployedBytecode": "0x6080604052600436106100f75760003560e01c80638456cb591161008a578063d7f2d0e711610059578063d7f2d0e7146102af578063ebfa62b9146102cf578063f2fde38b146102ef578063f3fef3a31461030f57600080fd5b80638456cb591461023c5780638da5cb5b14610251578063b2e65bc51461026f578063cb054d3e1461028f57600080fd5b806358f7f6d2116100c657806358f7f6d2146101b35780635c975abb146101f3578063715018a61461021257806373448c461461022757600080fd5b8063141961bc146101035780632f5dc3db1461013e5780633f4ba83a1461016e578063409ef8091461018557600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e36600461146d565b61032f565b6040516101359695949392919061164e565b60405180910390f35b34801561014a57600080fd5b5061015e6101593660046114b4565b6103fe565b6040519015158152602001610135565b34801561017a57600080fd5b506101836104c5565b005b34801561019157600080fd5b506101a56101a036600461140c565b61052e565b604051908152602001610135565b3480156101bf57600080fd5b506101db73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b039091168152602001610135565b3480156101ff57600080fd5b50600054600160a01b900460ff1661015e565b34801561021e57600080fd5b50610183610603565b34801561023357600080fd5b506101a5610667565b34801561024857600080fd5b50610183610677565b34801561025d57600080fd5b506000546001600160a01b03166101db565b34801561027b57600080fd5b506101a561028a3660046114b4565b6106d9565b34801561029b57600080fd5b506101836102aa36600461158a565b610717565b3480156102bb57600080fd5b506101836102ca3660046114eb565b61083d565b3480156102db57600080fd5b5061015e6102ea366004611485565b610b4e565b3480156102fb57600080fd5b5061018361030a3660046113a9565b610b88565b34801561031b57600080fd5b5061018361032a3660046113e1565b610c6a565b60026020819052600091825260409091208054600182015492820154600383015460048401546005850180546001600160a01b03909516969560ff909416949293919261037b906116f1565b80601f01602080910402602001604051908101604052809291908181526020018280546103a7906116f1565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b5050505050905086565b60008381526003602090815260408083206001600160a01b038616845282528083208054825181850281018501909352808352849383018282801561046257602002820191906000526020600020905b81548152602001906001019080831161044e575b5050505050905060005b81518110156104bb578382828151811061049657634e487b7160e01b600052603260045260246000fd5b602002602001015114156104a957600192505b806104b38161172c565b91505061046c565b50505b9392505050565b6000546001600160a01b031633146105245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61052c610d82565b565b600080546001600160a01b031633146105895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b50600180548082019091556000818152600260208181526040909220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03891617815560018101879055908101805460ff1916905560038101859055835190916105f9916005840191860190611289565b5050949350505050565b6000546001600160a01b0316331461065d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b61052c6000610e28565b600061067260015490565b905090565b6000546001600160a01b031633146106d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b61052c610e85565b6003602052826000526040600020602052816000526040600020818154811061070157600080fd5b9060005260206000200160009250925050505481565b6000546001600160a01b031633146107715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b8561077b60015490565b81106107c95760405162461bcd60e51b815260206004820152601760248201527f43616d706169676e20646f6573206e6f74206578697374000000000000000000604482015260640161051b565b6000878152600260208181526040909220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038a1617815560018101889055908101805460ff19168715151790556003810185905583519091610832916005840191860190611289565b505050505050505050565b600054600160a01b900460ff161561088a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161051b565b60008681526002602081905260409091200154869060ff16156108ef5760405162461bcd60e51b815260206004820152601660248201527f43616d706169676e206973206e6f742061637469766500000000000000000000604482015260640161051b565b6000878152600260205260409020600181015442116109505760405162461bcd60e51b815260206004820152601b60248201527f63616d706169676e206973206e6f742073746172746564207965740000000000604482015260640161051b565b61095b8888876103fe565b156109a85760405162461bcd60e51b815260206004820152600f60248201527f616c726561647920636c61696d65640000000000000000000000000000000000604482015260640161051b565b6040516bffffffffffffffffffffffff19606089901b16602082015260348101869052605481018790526000906074016040516020818303038152906040528051906020012090506000610a33868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505050600385015484610f0d565b905080610a825760405162461bcd60e51b815260206004820152601760248201527f6c656166206e6f7420696e206d65726b6c652074726565000000000000000000604482015260640161051b565b87836004016000828254610a9691906116a9565b909155505060008a81526003602090815260408083206001600160a01b03808e1685529083529083208054600181018255908452919092200188905583541673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610b0a578254610b05906001600160a01b03168a8a610f23565b610b42565b6040516001600160a01b038a169089156108fc02908a906000818181858888f19350505050158015610b40573d6000803e3d6000fd5b505b50505050505050505050565b60008281526003602090815260408083206001600160a01b038516845290915281205415610b7e57506001610b82565b5060005b92915050565b6000546001600160a01b03163314610be25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b6001600160a01b038116610c5e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161051b565b610c6781610e28565b50565b6000546001600160a01b03163314610cc45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b60008111610d145760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420776974686472617720616d6f756e74000000000000000000604482015260640161051b565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610d5057610d4c6001600160a01b0383163383610f23565b5050565b604051339082156108fc029083906000818181858888f19350505050158015610d7d573d6000803e3d6000fd5b505050565b600054600160a01b900460ff16610ddb5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161051b565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615610ed25760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161051b565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e0b3390565b600082610f1a8584610f8a565b14949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610d7d90849061100c565b600081815b8451811015611004576000858281518110610fba57634e487b7160e01b600052603260045260246000fd5b60200260200101519050808311610fe05760008381526020829052604090209250610ff1565b600081815260208490526040902092505b5080610ffc8161172c565b915050610f8f565b509392505050565b6000611061826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110f19092919063ffffffff16565b805190915015610d7d578080602001905181019061107f91906113c5565b610d7d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161051b565b60606111008484600085611108565b949350505050565b6060824710156111805760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161051b565b6001600160a01b0385163b6111d75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161051b565b600080866001600160a01b031685876040516111f39190611632565b60006040518083038185875af1925050503d8060008114611230576040519150601f19603f3d011682016040523d82523d6000602084013e611235565b606091505b5091509150611245828286611250565b979650505050505050565b6060831561125f5750816104be565b82511561126f5782518084602001fd5b8160405162461bcd60e51b815260040161051b9190611696565b828054611295906116f1565b90600052602060002090601f0160209004810192826112b757600085556112fd565b82601f106112d057805160ff19168380011785556112fd565b828001600101855582156112fd579182015b828111156112fd5782518255916020019190600101906112e2565b5061130992915061130d565b5090565b5b80821115611309576000815560010161130e565b600082601f830112611332578081fd5b813567ffffffffffffffff8082111561134d5761134d61175d565b604051601f8301601f19908116603f011681019082821181831017156113755761137561175d565b8160405283815286602085880101111561138d578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156113ba578081fd5b81356104be81611773565b6000602082840312156113d6578081fd5b81516104be81611788565b600080604083850312156113f3578081fd5b82356113fe81611773565b946020939093013593505050565b60008060008060808587031215611421578182fd5b843561142c81611773565b93506020850135925060408501359150606085013567ffffffffffffffff811115611455578182fd5b61146187828801611322565b91505092959194509250565b60006020828403121561147e578081fd5b5035919050565b60008060408385031215611497578182fd5b8235915060208301356114a981611773565b809150509250929050565b6000806000606084860312156114c8578283fd5b8335925060208401356114da81611773565b929592945050506040919091013590565b60008060008060008060a08789031215611503578182fd5b86359550602087013561151581611773565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561153f578384fd5b818901915089601f830112611552578384fd5b813581811115611560578485fd5b8a60208260051b8501011115611574578485fd5b6020830194508093505050509295509295509295565b60008060008060008060c087890312156115a2578182fd5b8635955060208701356115b481611773565b94506040870135935060608701356115cb81611788565b92506080870135915060a087013567ffffffffffffffff8111156115ed578182fd5b6115f989828a01611322565b9150509295509295509295565b6000815180845261161e8160208601602086016116c1565b601f01601f19169290920160200192915050565b600082516116448184602087016116c1565b9190910192915050565b6001600160a01b0387168152856020820152841515604082015283606082015282608082015260c060a0820152600061168a60c0830184611606565b98975050505050505050565b6020815260006104be6020830184611606565b600082198211156116bc576116bc611747565b500190565b60005b838110156116dc5781810151838201526020016116c4565b838111156116eb576000848401525b50505050565b600181811c9082168061170557607f821691505b6020821081141561172657634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561174057611740611747565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c6757600080fd5b8015158114610c6757600080fdfea164736f6c6343000804000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "rewards(uint256,address,uint256)": {
        "notice": "Mapping of addresses who have claimed tokens from campaign"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1619,
        "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
        "label": "_campaignIdCounter",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Counter)1434_storage"
      },
      {
        "astId": 1638,
        "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
        "label": "campaigns",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Campaign)1633_storage)"
      },
      {
        "astId": 1646,
        "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
        "label": "rewards",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)862": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      "t_mapping(t_uint256,t_struct(Campaign)1633_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Erc20Airdrop.Campaign)",
        "numberOfBytes": "32",
        "value": "t_struct(Campaign)1633_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Campaign)1633_storage": {
        "encoding": "inplace",
        "label": "struct Erc20Airdrop.Campaign",
        "members": [
          {
            "astId": 1622,
            "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)862"
          },
          {
            "astId": 1624,
            "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
            "label": "redeemableAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1626,
            "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
            "label": "paused",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 1628,
            "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
            "label": "merkleRoot",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32"
          },
          {
            "astId": 1630,
            "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
            "label": "redeemedAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1632,
            "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
            "label": "uri",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Counter)1434_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 1433,
            "contract": "contracts/Erc20Airdrop.sol:Erc20Airdrop",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}